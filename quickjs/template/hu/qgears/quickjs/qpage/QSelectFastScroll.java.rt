////package hu.qgears.quickjs.qpage;
////
////import java.io.IOException;
////
////import hu.qgears.commons.UtilFile;
////
////public class QSelectFastScroll extends QSelect {
////
////	public QSelectFastScroll(QPage page0, String id) {
////		super(page0, id);
////	}
////	
////	@Override
////	public void generateExampleHtmlObject(HtmlTemplate parent) {
////		setWriter(parent.getWriter());
<div id="////		writeJSValue(id);
" style="width:650px; height:150px;"></div>	
////		setWriter(null);
////	}
////	
////	public static void generateHeader(HtmlTemplate parent)
////	{
////		new HtmlTemplate(parent){
////
////			public void generate() {
////				try {
<style>
.option:hover {
    background-color: yellow;
}
.option:active {
    background-color: red;
}
</style>
<script language="javascript" type="text/javascript">
#OUtilFile.loadAsString(getClass().getResource("fastscroll.js"))#class QSelectFastScroll extends QComponent
{
	addDomListeners()
	{
		this.fs=new FastScroll(this.dom);
//		this.dom.onchange=this.onchange.bind(this);
		this.fs.setClickListener(this.onchange.bind(this));
	}
	onchange(index)
	{
		var fd=this.page.createFormData(this);
		fd.append("selected", index);
		this.page.send(fd);
	}
	setSelected(value)
	{
		this.fs.select(value);
	}
	setOptions(options)
	{
		this.fs.setEntries(options);
	}
}
</script>
////				} catch (IOException e) {
////					throw new RuntimeException(e);
////				}
////			}
////			
////		}.generate();
////	}
////
////}
